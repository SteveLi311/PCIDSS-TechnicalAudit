#!/bin/bash

REGION=$(curl -s http://169.254.169.254/latest/dynamic/instance-identity/document | jq -r .region)
[ -z "$REGION" ] && REGION="ap-southeast-1"

TOKEN=$(curl -s -X PUT "http://169.254.169.254/latest/api/token" \
  -H "X-aws-ec2-metadata-token-ttl-seconds: 60")

INSTANCE_ID=$(curl -s -H "X-aws-ec2-metadata-token: $TOKEN" \
  http://169.254.169.254/latest/meta-data/instance-id)

ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)

RAW_JSON=$(aws ec2 describe-instances --region "$REGION" --instance-ids "$INSTANCE_ID" --query 'Reservations[0].Instances[0]' --output json)

NAME=$(echo "$RAW_JSON" | jq -r '.Tags[] | select(.Key=="Name") | .Value')
OS=$(echo "$RAW_JSON" | jq -r '.PlatformDetails')
PRIVATE_IP=$(echo "$RAW_JSON" | jq -r '.PrivateIpAddress')
PUBLIC_IP=$(echo "$RAW_JSON" | jq -r '.PublicIpAddress // "N/A"')
LAUNCH_TIME=$(echo "$RAW_JSON" | jq -r '.LaunchTime')
INSTANCE_TYPE=$(echo "$RAW_JSON" | jq -r '.InstanceType')
AZ=$(echo "$RAW_JSON" | jq -r '.Placement.AvailabilityZone')
LAUNCH_TIME_FORMATTED=$(date -d "$LAUNCH_TIME" +"%Y/%m/%d %p %I:%M (%Z%:z)" | sed 's/AM/上午/;s/PM/下午/')
CURRENT_TIME=$(date +"%Y/%m/%d %p %I:%M (%Z%:z)" | sed 's/AM/上午/;s/PM/下午/')

mkdir -p report
OUTPUT_FILE="report/check_ec2_antimalware.xml"
EVIDENCE_XML=""

INSTANCE_IDS=$(aws ec2 describe-instances --region "$REGION" --query 'Reservations[*].Instances[*].InstanceId' --output text)

for iid in $INSTANCE_IDS; do
  META=$(aws ec2 describe-instances --region "$REGION" --instance-ids "$iid" --query 'Reservations[0].Instances[0]' --output json)
  HOSTNAME=$(echo "$META" | jq -r '.Tags[]? | select(.Key=="Name") | .Value')
  PLATFORM=$(echo "$META" | jq -r '.PlatformDetails')
  AGENT=$(aws ssm describe-instance-information --region "$REGION" --query "InstanceInformationList[?InstanceId=='$iid']" --output json)
  AGENT_STATUS=$(echo "$AGENT" | jq -r '.[0].PingStatus // "Inactive"')

  ANTIVIRUS=$(aws ssm list-inventory-entries --region "$REGION" --instance-id "$iid" --type-name "AWS:Application" --query "Entries[?contains(Name, 'Trend') || contains(Name, 'Defender') || contains(Name, 'Sentinel')].Name" --output text 2>/dev/null)

  EVIDENCE_XML="${EVIDENCE_XML}
    <instance>
      <id>$iid</id>
      <name>$HOSTNAME</name>
      <platform>$PLATFORM</platform>
      <ssm_status>$AGENT_STATUS</ssm_status>
      <antimalware>${ANTIVIRUS:-NotFound}</antimalware>
    </instance>"
done

cat <<EOF > "$OUTPUT_FILE"
<getinfo>
  <project>$ACCOUNT_ID</project>
  <instanceid>$INSTANCE_ID</instanceid>
  <hostname>$NAME</hostname>
  <system>$OS</system>
  <ip>$PRIVATE_IP</ip>
  <publicip>$PUBLIC_IP</publicip>
  <instancetype>$INSTANCE_TYPE</instancetype>
  <availabilityzone>$AZ</availabilityzone>
  <launch_time>$LAUNCH_TIME_FORMATTED</launch_time>
  <current_time>$CURRENT_TIME</current_time>
  <requirement>5.2.1 - Antimalware Deployment Status</requirement>
  <evidence>
$EVIDENCE_XML
  </evidence>
</getinfo>
EOF

echo "✅ Output saved to $OUTPUT_FILE"

